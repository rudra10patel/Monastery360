{
  "version": 3,
  "sources": ["../../../src/pages/DigitalArchives.tsx", "../../../src/components/ui/tabs.tsx", "../../../node_modules/@radix-ui/react-tabs/src/tabs.tsx", "../../../node_modules/@radix-ui/react-roving-focus/src/roving-focus-group.tsx", "../../../node_modules/@radix-ui/react-direction/src/direction.tsx", "../../../src/components/ImageViewModal.tsx"],
  "sourcesContent": ["\uFEFFimport { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Search, Download, Eye, BookOpen, Image, FileText, Calendar, Shield, Lock } from \"lucide-react\";\r\nimport { Navigation } from \"@/components/Navigation\";\r\nimport { ImageViewModal } from \"@/components/ImageViewModal\";\r\nimport { archiveItems, getArchiveStatistics, type ArchiveItem } from \"@/data/archives\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const DigitalArchives = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedType, setSelectedType] = useState<string>(\"all\");\r\n  const [selectedItem, setSelectedItem] = useState<ArchiveItem | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n  const monasteryParam = searchParams.get('monastery');\r\n\r\n  // Set search term from URL parameter on component mount\r\n  useEffect(() => {\r\n    if (monasteryParam) {\r\n      setSearchTerm(monasteryParam);\r\n    }\r\n  }, [monasteryParam]);\r\n\r\n  const filteredItems = archiveItems.filter(item => {\r\n    const matchesSearch = item.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.monastery.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    \r\n    const matchesType = selectedType === \"all\" || item.type === selectedType;\r\n\r\n    return matchesSearch && matchesType;\r\n  });\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case \"manuscript\": return <BookOpen className=\"w-4 h-4\" />;\r\n      case \"mural\": return <Image className=\"w-4 h-4\" />;\r\n      case \"document\": return <FileText className=\"w-4 h-4\" />;\r\n      case \"photograph\": return <Eye className=\"w-4 h-4\" />;\r\n      default: return <FileText className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case \"manuscript\": return \"bg-monastery-gold/20 text-monastery-maroon\";\r\n      case \"mural\": return \"bg-mountain-blue/20 text-mountain-blue\";\r\n      case \"document\": return \"bg-muted text-muted-foreground\";\r\n      case \"photograph\": return \"bg-primary/20 text-primary\";\r\n      default: return \"bg-muted text-muted-foreground\";\r\n    }\r\n  };\r\n\r\n  const capitalizeFirst = (str: string) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  const getAccessLevelIcon = (accessLevel: string) => {\r\n    switch (accessLevel) {\r\n      case \"public\": return null;\r\n      case \"restricted\": return <Shield className=\"w-3 h-3\" />;\r\n      case \"monastery-only\": return <Lock className=\"w-3 h-3\" />;\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n  const getAccessLevelColor = (accessLevel: string) => {\r\n    switch (accessLevel) {\r\n      case \"public\": return \"bg-green-100 text-green-800\";\r\n      case \"restricted\": return \"bg-yellow-100 text-yellow-800\";\r\n      case \"monastery-only\": return \"bg-red-100 text-red-800\";\r\n      default: return \"bg-muted text-muted-foreground\";\r\n    }\r\n  };\r\n\r\n  const getConditionColor = (condition: string) => {\r\n    switch (condition) {\r\n      case \"excellent\": return \"text-green-600\";\r\n      case \"good\": return \"text-blue-600\";\r\n      case \"fair\": return \"text-yellow-600\";\r\n      case \"poor\": return \"text-red-600\";\r\n      default: return \"text-muted-foreground\";\r\n    }\r\n  };\r\n\r\n  const stats = getArchiveStatistics();\r\n\r\n  const handleViewItem = (item: ArchiveItem) => {\r\n    setSelectedItem(item);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <Navigation />\r\n      \r\n      {/* Hero Section */}\r\n      <section className=\"pt-24 pb-8 bg-gradient-to-br from-monastery-gold/10 to-background\">\r\n        <div className=\"max-w-7xl mx-auto px-6\">\r\n          <div className=\"text-center mb-8\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-6 text-foreground\">\r\n              <span className=\"bg-gradient-monastery bg-clip-text text-transparent\">Digital Archives</span>\r\n            </h1>\r\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\r\n              Explore centuries of preserved manuscripts, murals, documents, and photographs \r\n              from Sikkim's monasteries with AI-powered search and categorization.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 py-8\">\r\n        {/* Search and Filters */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n              <Input\r\n                placeholder=\"Search archives by title, monastery, content, or tags...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Button \r\n                variant=\"outline\"\r\n                onClick={() => setSearchTerm(\"\")}\r\n                disabled={!searchTerm}\r\n              >\r\n                Clear Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <Tabs value={selectedType} onValueChange={setSelectedType}>\r\n            <TabsList className=\"grid w-full grid-cols-5\">\r\n              <TabsTrigger value=\"all\">All Items</TabsTrigger>\r\n              <TabsTrigger value=\"manuscript\">Manuscripts</TabsTrigger>\r\n              <TabsTrigger value=\"mural\">Murals</TabsTrigger>\r\n              <TabsTrigger value=\"document\">Documents</TabsTrigger>\r\n              <TabsTrigger value=\"photograph\">Photographs</TabsTrigger>\r\n            </TabsList>\r\n          </Tabs>\r\n        </div>\r\n\r\n        {/* Results Count */}\r\n        <div className=\"mb-6\">\r\n          <p className=\"text-muted-foreground\">\r\n            Showing {filteredItems.length} of {archiveItems.length} archived items\r\n          </p>\r\n        </div>\r\n\r\n        {/* Archive Items Grid */}\r\n        {filteredItems.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <Search className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-semibold text-foreground mb-2\">No archive items found</h3>\r\n            <p className=\"text-muted-foreground\">\r\n              {searchTerm \r\n                ? `No results found for \"${searchTerm}\". Try adjusting your search terms.`\r\n                : \"No items match the selected filter.\"\r\n              }\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\r\n            {filteredItems.map((item) => (\r\n            <Card key={item.id} className=\"overflow-hidden hover:shadow-monastery transition-all duration-300 group\">\r\n              {/* Item Preview */}\r\n              <div className=\"h-48 bg-gradient-to-br from-muted to-muted/50 flex items-center justify-center relative overflow-hidden\">\r\n                {item.imageUrl ? (\r\n                  <img \r\n                    src={item.imageUrl} \r\n                    alt={item.title}\r\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"text-6xl text-muted-foreground/30 group-hover:scale-110 transition-transform duration-300\">\r\n                    {getTypeIcon(item.type)}\r\n                  </div>\r\n                )}\r\n                {!item.digitized && (\r\n                  <div className=\"absolute top-3 right-3\">\r\n                    <Badge variant=\"destructive\" className=\"text-xs\">\r\n                      Not Digitized\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n                {item.digitized && (\r\n                  <div className=\"absolute top-3 right-3\">\r\n                    <Badge className=\"bg-monastery-gold text-monastery-maroon text-xs\">\r\n                      Available\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n                {item.accessLevel !== \"public\" && (\r\n                  <div className=\"absolute top-3 left-3\">\r\n                    <Badge className=\"text-xs\">\r\n                      {getAccessLevelIcon(item.accessLevel)}\r\n                      {item.accessLevel === \"restricted\" ? \"Restricted\" : \"Monastery Only\"}\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Item Details */}\r\n              <div className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-start justify-between mb-3 gap-2\">\r\n                  <h3 className=\"font-semibold text-foreground line-clamp-2 text-sm sm:text-base flex-1\">{item.title}</h3>\r\n                  <Badge className=\"ml-2 text-xs flex-shrink-0\">\r\n                    {capitalizeFirst(item.type)}\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"space-y-2 mb-4\">\r\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\r\n                    <Calendar className=\"w-4 h-4 mr-2\" />\r\n                    {item.date}\r\n                  </div>\r\n                  <div className=\"text-sm font-medium text-foreground\">\r\n                    {item.monastery}\r\n                  </div>\r\n                  <div className=\"text-sm text-muted-foreground\">\r\n                    Language: {item.language}\r\n                  </div>\r\n                  <div className=\"text-sm text-muted-foreground\">\r\n                    Category: {item.category}\r\n                  </div>\r\n                  <div className=\"text-sm\">\r\n                    Condition: <span className=\"font-medium\">\r\n                      {item.condition.charAt(0).toUpperCase() + item.condition.slice(1)}\r\n                    </span>\r\n                  </div>\r\n                  {item.dimensions && (\r\n                    <div className=\"text-sm text-muted-foreground\">\r\n                      Dimensions: {item.dimensions}\r\n                    </div>\r\n                  )}\r\n                  {item.material && (\r\n                    <div className=\"text-sm text-muted-foreground\">\r\n                      Material: {item.material}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <p className=\"text-sm text-muted-foreground mb-4 line-clamp-3\">\r\n                  {item.description}\r\n                </p>\r\n\r\n                {/* Tags */}\r\n                <div className=\"flex flex-wrap gap-1 mb-4\">\r\n                  {item.tags.slice(0, 3).map((tag, index) => (\r\n                    <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                      {tag}\r\n                    </Badge>\r\n                  ))}\r\n                  {item.tags.length > 3 && (\r\n                    <Badge variant=\"outline\" className=\"text-xs\">\r\n                      +{item.tags.length - 3} more\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-2\">\r\n                  {item.digitized ? (\r\n                    <Button \r\n                      variant=\"monastery\" \r\n                      size=\"sm\" \r\n                      className=\"flex-1\"\r\n                      onClick={() => handleViewItem(item)}\r\n                    >\r\n                      <Eye className=\"w-4 h-4 mr-2\" />\r\n                      View\r\n                    </Button>\r\n                  ) : (\r\n                    <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" disabled>\r\n                      Pending Digitization\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Archive Statistics */}\r\n        <div className=\"mt-12 grid sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <Card className=\"p-6 text-center\">\r\n            <div className=\"text-3xl font-bold text-monastery-gold mb-2\">{stats.total}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Total Items</div>\r\n          </Card>\r\n          <Card className=\"p-6 text-center\">\r\n            <div className=\"text-3xl font-bold text-mountain-blue mb-2\">{stats.digitized}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Digitized</div>\r\n          </Card>\r\n          <Card className=\"p-6 text-center\">\r\n            <div className=\"text-3xl font-bold text-primary mb-2\">{stats.monasteries}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Monasteries</div>\r\n          </Card>\r\n          <Card className=\"p-6 text-center\">\r\n            <div className=\"text-3xl font-bold text-accent mb-2\">{stats.languages}</div>\r\n            <div className=\"text-sm text-muted-foreground\">Languages</div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image View Modal */}\r\n      <ImageViewModal\r\n        item={selectedItem}\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DigitalArchives;\r\n", "import * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ComponentRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? '',\n      caller: TABS_NAME,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n  preventScrollOnEntryFocus?: boolean;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId ?? null,\n    onChange: onCurrentTabStopIdChange,\n    caller: GROUP_NAME,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes, preventScrollOnEntryFocus);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends Omit<PrimitiveSpanProps, 'children'> {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n  children?:\n    | React.ReactNode\n    | ((props: { hasTabStop: boolean; isCurrentTabStop: boolean }) => React.ReactNode);\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      children,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove, currentTabStopId } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        >\n          {typeof children === 'function'\n            ? children({ isCurrentTabStop, hasTabStop: currentTabStopId != null })\n            : children}\n        </Primitive.span>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "import { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Download, ZoomIn, ZoomOut, RotateCw, Info, ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { ArchiveItem } from \"@/data/archives\";\r\n\r\ninterface ImageViewModalProps {\r\n  item: ArchiveItem | null;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const ImageViewModal = ({ item, isOpen, onClose }: ImageViewModalProps) => {\r\n  const [zoom, setZoom] = useState(1);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  if (!item) return null;\r\n\r\n  // Get the images to display - use galleryImages if available, otherwise fallback to imageUrl\r\n  const images = item.galleryImages && item.galleryImages.length > 0 \r\n    ? item.galleryImages \r\n    : item.imageUrl \r\n    ? [item.imageUrl] \r\n    : [];\r\n\r\n  const currentImage = images[currentImageIndex];\r\n\r\n  const handleDownload = async () => {\r\n    try {\r\n      const response = await fetch(currentImage);\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${item.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_${currentImageIndex + 1}.jpg`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n    }\r\n  };\r\n\r\n  const handlePreviousImage = () => {\r\n    setCurrentImageIndex(prev => prev > 0 ? prev - 1 : images.length - 1);\r\n    setZoom(1);\r\n    setRotation(0);\r\n  };\r\n\r\n  const handleNextImage = () => {\r\n    setCurrentImageIndex(prev => prev < images.length - 1 ? prev + 1 : 0);\r\n    setZoom(1);\r\n    setRotation(0);\r\n  };\r\n\r\n  const handleZoomIn = () => {\r\n    setZoom(prev => Math.min(prev + 0.25, 3));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setZoom(prev => Math.max(prev - 0.25, 0.5));\r\n  };\r\n\r\n  const handleRotate = () => {\r\n    setRotation(prev => (prev + 90) % 360);\r\n  };\r\n\r\n  const resetView = () => {\r\n    setZoom(1);\r\n    setRotation(0);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-6xl max-h-[90vh] p-0 overflow-hidden\">\r\n        <DialogHeader className=\"p-6 pb-0\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <DialogTitle className=\"text-xl font-semibold\">{item.title}</DialogTitle>\r\n              {images.length > 1 && (\r\n                <p className=\"text-sm text-muted-foreground mt-1\">\r\n                  Image {currentImageIndex + 1} of {images.length}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"monastery\"\r\n                size=\"sm\"\r\n                onClick={handleDownload}\r\n              >\r\n                <Download className=\"w-4 h-4 mr-2\" />\r\n                Download\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setShowInfo(!showInfo)}\r\n              >\r\n                <Info className=\"w-4 h-4 mr-2\" />\r\n                {showInfo ? 'Hide Info' : 'Show Info'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <div className=\"flex flex-col lg:flex-row h-[calc(90vh-120px)]\">\r\n          {/* Image Viewer */}\r\n          <div className=\"flex-1 relative bg-black/5 overflow-hidden\">\r\n            {/* Navigation Arrows */}\r\n            {images.length > 1 && (\r\n              <>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"absolute left-4 top-1/2 transform -translate-y-1/2 z-10 bg-monastery-maroon/90 backdrop-blur-sm hover:bg-sunrise hover:text-sunset dark:bg-monastery-maroon/90 dark:text-white dark:hover:bg-sunrise dark:hover:text-sunset\"\r\n                  onClick={handlePreviousImage}\r\n                >\r\n                  <ChevronLeft className=\"w-4 h-4\" />\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"absolute right-4 top-1/2 transform -translate-y-1/2 z-10 bg-monastery-maroon/90 backdrop-blur-sm hover:bg-sunrise hover:text-sunset dark:bg-monastery-maroon/90 dark:text-white dark:hover:bg-sunrise dark:hover:text-sunset\"\r\n                  onClick={handleNextImage}\r\n                >\r\n                  <ChevronRight className=\"w-4 h-4\" />\r\n                </Button>\r\n              </>\r\n            )}\r\n\r\n            <div className=\"absolute inset-0 flex items-center justify-center p-4\">\r\n              <div\r\n                className=\"relative max-w-full max-h-full transition-transform duration-200\"\r\n                style={{\r\n                  transform: `scale(${zoom}) rotate(${rotation}deg)`,\r\n                }}\r\n              >\r\n                <img\r\n                  src={currentImage}\r\n                  alt={`${item.title} - Image ${currentImageIndex + 1}`}\r\n                  className=\"max-w-full max-h-full object-contain rounded-lg shadow-lg\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Image Controls */}\r\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex items-center gap-2 bg-white/90 backdrop-blur-sm rounded-lg p-2 shadow-lg dark:bg-sunrise/20 dark:text-sunrise\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleZoomOut} disabled={zoom <= 0.5} className=\"hover:bg-sunrise hover:text-sunset dark:hover:bg-sunrise dark:hover:text-sunset\">\r\n                <ZoomOut className=\"w-4 h-4\" />\r\n              </Button>\r\n              <span className=\"text-sm font-medium min-w-[60px] text-center dark:text-sunrise\">\r\n                {Math.round(zoom * 100)}%\r\n              </span>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleZoomIn} disabled={zoom >= 3} className=\"hover:bg-sunrise hover:text-sunset dark:hover:bg-sunrise dark:hover:text-sunset\">\r\n                <ZoomIn className=\"w-4 h-4\" />\r\n              </Button>\r\n              <div className=\"w-px h-6 bg-border mx-1 dark:bg-sunrise/30\" />\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleRotate} className=\"hover:bg-sunrise hover:text-sunset dark:hover:bg-sunrise dark:hover:text-sunset\">\r\n                <RotateCw className=\"w-4 h-4\" />\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={resetView} className=\"hover:bg-sunrise hover:text-sunset dark:hover:bg-sunrise dark:hover:text-sunset\">\r\n                Reset\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Thumbnail Navigation */}\r\n            {images.length > 1 && (\r\n              <div className=\"absolute bottom-16 left-1/2 transform -translate-x-1/2 flex items-center gap-2 bg-white/90 backdrop-blur-sm rounded-lg p-2 shadow-lg dark:bg-sunrise/20\">\r\n                {images.map((image, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setCurrentImageIndex(index);\r\n                      setZoom(1);\r\n                      setRotation(0);\r\n                    }}\r\n                    className={`w-12 h-12 rounded-md overflow-hidden border-2 transition-all ${\r\n                      index === currentImageIndex \r\n                        ? 'border-primary shadow-md dark:border-sunrise' \r\n                        : 'border-transparent hover:border-primary/50 dark:hover:border-sunrise/50'\r\n                    }`}\r\n                  >\r\n                    <img\r\n                      src={image}\r\n                      alt={`Thumbnail ${index + 1}`}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Info Panel */}\r\n          {showInfo && (\r\n            <div className=\"lg:w-80 border-l bg-background overflow-y-auto\">\r\n              <div className=\"p-6 space-y-6\">\r\n                {/* Basic Info */}\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-3\">Item Details</h3>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium\">Type:</span>\r\n                      <Badge className=\"ml-2\">{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</Badge>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Monastery:</span>\r\n                      <span className=\"ml-2\">{item.monastery}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Date:</span>\r\n                      <span className=\"ml-2\">{item.date}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Language:</span>\r\n                      <span className=\"ml-2\">{item.language}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Category:</span>\r\n                      <span className=\"ml-2\">{item.category}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium\">Condition:</span>\r\n                      <span className={`ml-2 font-medium ${\r\n                        item.condition === 'excellent' ? 'text-green-600' :\r\n                        item.condition === 'good' ? 'text-blue-600' :\r\n                        item.condition === 'fair' ? 'text-yellow-600' :\r\n                        'text-red-600'\r\n                      }`}>\r\n                        {item.condition.charAt(0).toUpperCase() + item.condition.slice(1)}\r\n                      </span>\r\n                    </div>\r\n                    {item.dimensions && (\r\n                      <div>\r\n                        <span className=\"font-medium\">Dimensions:</span>\r\n                        <span className=\"ml-2\">{item.dimensions}</span>\r\n                      </div>\r\n                    )}\r\n                    {item.material && (\r\n                      <div>\r\n                        <span className=\"font-medium\">Material:</span>\r\n                        <span className=\"ml-2\">{item.material}</span>\r\n                      </div>\r\n                    )}\r\n                    {item.artist && (\r\n                      <div>\r\n                        <span className=\"font-medium\">Artist:</span>\r\n                        <span className=\"ml-2\">{item.artist}</span>\r\n                      </div>\r\n                    )}\r\n                    {item.provenance && (\r\n                      <div>\r\n                        <span className=\"font-medium\">Provenance:</span>\r\n                        <span className=\"ml-2\">{item.provenance}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Description */}\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-3\">Description</h3>\r\n                  <p className=\"text-sm text-muted-foreground leading-relaxed\">\r\n                    {item.description}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Tags */}\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-3\">Tags</h3>\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    {item.tags.map((tag, index) => (\r\n                      <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                        {tag}\r\n                      </Badge>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Access Level */}\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-3\">Access Level</h3>\r\n                  <Badge \r\n                    className={\r\n                      item.accessLevel === 'public' ? 'bg-green-100 text-green-800' :\r\n                      item.accessLevel === 'restricted' ? 'bg-yellow-100 text-yellow-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }\r\n                  >\r\n                    {item.accessLevel === 'public' ? 'Public Access' :\r\n                     item.accessLevel === 'restricted' ? 'Restricted Access' :\r\n                     'Monastery Only'}\r\n                  </Badge>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react", "React", "React", "React", "React", "import_jsx_runtime", "DirectionContext", "useDirection", "localDir", "globalDir", "DirectionContext", "import_jsx_runtime", "ENTRY_FOCUS", "EVENT_OPTIONS", "GROUP_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createRovingFocusGroupContext", "createRovingFocusGroupScope", "createContextScope", "RovingFocusProvider", "useRovingFocusContext", "RovingFocusGroup", "props", "forwardedRef", "RovingFocusGroupImpl", "__scopeRovingFocusGroup", "orientation", "loop", "dir", "currentTabStopIdProp", "defaultCurrentTabStopId", "onCurrentTabStopIdChange", "onEntryFocus", "preventScrollOnEntryFocus", "groupProps", "ref", "composedRefs", "useComposedRefs", "direction", "useDirection", "currentTabStopId", "setCurrentTabStopId", "useControllableState", "isTabbingBackOut", "setIsTabbingBackOut", "handleEntryFocus", "useCallbackRef", "getItems", "isClickFocusRef", "focusableItemsCount", "setFocusableItemsCount", "node", "tabStopId", "prevCount", "Primitive", "composeEventHandlers", "event", "isKeyboardFocus", "entryFocusEvent", "items", "item", "activeItem", "currentItem", "candidateNodes", "focusFirst", "ITEM_NAME", "RovingFocusGroupItem", "focusable", "active", "children", "itemProps", "autoId", "useId", "id", "context", "isCurrentTabStop", "onFocusableItemAdd", "onFocusableItemRemove", "focusIntent", "getFocusIntent", "currentIndex", "wrapArray", "MAP_KEY_TO_FOCUS_INTENT", "getDirectionAwareKey", "key", "candidates", "preventScroll", "PREVIOUSLY_FOCUSED_ELEMENT", "candidate", "array", "startIndex", "_", "index", "Root", "Item", "import_jsx_runtime", "TABS_NAME", "createTabsContext", "createTabsScope", "createContextScope", "createRovingFocusGroupScope", "useRovingFocusGroupScope", "TabsProvider", "useTabsContext", "Tabs", "props", "forwardedRef", "__scopeTabs", "valueProp", "onValueChange", "defaultValue", "orientation", "dir", "activationMode", "tabsProps", "direction", "useDirection", "value", "setValue", "useControllableState", "useId", "Primitive", "TAB_LIST_NAME", "TabsList", "loop", "listProps", "context", "rovingFocusGroupScope", "Root", "TRIGGER_NAME", "TabsTrigger", "disabled", "triggerProps", "triggerId", "makeTriggerId", "contentId", "makeContentId", "isSelected", "Item", "composeEventHandlers", "event", "isAutomaticActivation", "CONTENT_NAME", "TabsContent", "forceMount", "children", "contentProps", "isMountAnimationPreventedRef", "rAF", "Presence", "present", "baseId", "List", "Trigger", "Content", "import_jsx_runtime", "Tabs", "Root2", "TabsList", "className", "props", "ref", "List", "cn", "TabsTrigger", "Trigger", "TabsContent", "Content", "import_react", "import_jsx_runtime", "ImageViewModal", "item", "isOpen", "onClose", "zoom", "setZoom", "rotation", "setRotation", "showInfo", "setShowInfo", "currentImageIndex", "setCurrentImageIndex", "images", "currentImage", "handleDownload", "blob", "url", "link", "error", "handlePreviousImage", "prev", "handleNextImage", "handleZoomIn", "handleZoomOut", "handleRotate", "resetView", "Dialog", "DialogContent", "DialogHeader", "DialogTitle", "Button", "Download", "Info", "ChevronLeft", "ChevronRight", "ZoomOut", "ZoomIn", "RotateCw", "image", "index", "Badge", "tag", "import_jsx_runtime", "DigitalArchives", "searchTerm", "setSearchTerm", "selectedType", "setSelectedType", "selectedItem", "setSelectedItem", "isModalOpen", "setIsModalOpen", "searchParams", "useSearchParams", "monasteryParam", "filteredItems", "archiveItems", "item", "matchesSearch", "tag", "matchesType", "getTypeIcon", "type", "BookOpen", "Image", "FileText", "Eye", "getTypeColor", "capitalizeFirst", "str", "getAccessLevelIcon", "accessLevel", "Shield", "Lock", "getAccessLevelColor", "getConditionColor", "condition", "stats", "getArchiveStatistics", "handleViewItem", "handleCloseModal", "Navigation", "Search", "Input", "e", "Button", "Tabs", "TabsList", "TabsTrigger", "Card", "Badge", "Calendar", "index", "ImageViewModal", "DigitalArchives_default"]
}
